--[[
firmo configuration file

This file contains the default configuration for firmo.
Copy this template to .firmo-config.lua and edit as needed.
]]

return {
  -- Test Discovery and Selection
  test_discovery = {
    dir = "./tests",                  -- Default directory to search for tests
    pattern = "*_test.lua",           -- Pattern to match test files
    ignore_patterns = { "temp_*" },   -- Patterns to ignore
    recursive = true,                 -- Recursively search directories
  },

  -- Output Formatting
  format = {
    use_color = true,                 -- Whether to use color codes in output
    indent_char = '\t',               -- Character to use for indentation (tab or spaces)
    indent_size = 1,                  -- How many indent_chars to use per level
    show_trace = false,               -- Show stack traces for errors
    show_success_detail = true,       -- Show details for successful tests
    compact = false,                  -- Use compact output format (less verbose)
    dot_mode = false,                 -- Use dot mode (. for pass, F for fail)
    summary_only = false,             -- Show only summary, not individual tests
    default_format = "detailed",      -- Default format (dot, compact, summary, detailed, plain)
  },

  -- Asynchronous Testing
  async = {
    timeout = 5000,                   -- Default timeout for async tests in milliseconds
    interval = 100,                   -- Check interval for async operations in milliseconds
    debug = false,                    -- Enable debug mode for async operations
  },

  -- Parallel Execution
  parallel = {
    workers = 4,                      -- Default number of worker processes
    timeout = 60,                     -- Default timeout in seconds per test file
    output_buffer_size = 10240,       -- Buffer size for capturing output
    verbose = false,                  -- Verbose output flag
    show_worker_output = true,        -- Show output from worker processes
    fail_fast = false,                -- Stop on first failure
    aggregate_coverage = true,        -- Combine coverage data from all workers
  },

  -- Coverage Analysis
  coverage = {
    enabled = false,                  -- Whether coverage is enabled by default
    source_dirs = {".", "src", "lib"}, -- Directories to scan for source files
    use_default_patterns = true,      -- Whether to use default include/exclude patterns
    discover_uncovered = true,        -- Discover files that aren't executed by tests
    include = {                       -- Files to include in coverage (appended to defaults when use_default_patterns is true)
      "*.lua",                        -- All Lua files in current directory
      "**/*.lua",                     -- All Lua files in subdirectories
    },
    exclude = {                       -- Files to exclude from coverage (appended to defaults when use_default_patterns is true)
      "*_test.lua",                   -- Test files with suffix
      "test_*.lua",                   -- Test files with prefix
      "tests/**/*.lua",               -- All files in tests directory
    },
    threshold = 90,                   -- Coverage threshold percentage
    format = "summary",               -- Default report format (summary, json, html, lcov)
    output = nil,                     -- Custom output file path (nil=auto-generated)
    debug = false,                    -- Enable debug output for coverage module
  },

  -- Test Quality Validation
  quality = {
    enabled = false,                  -- Whether test quality validation is enabled
    level = 1,                        -- Quality level to enforce (1-5)
    strict = false,                   -- Whether to fail on first quality issue
    format = "summary",               -- Report format (summary, json, html)
    output = nil,                     -- Output file path (nil for console)
  },

  -- Code Fixing/Linting
  codefix = {
    enabled = false,                  -- Enable code fixing functionality
    verbose = false,                  -- Enable verbose output
    debug = false,                    -- Enable debug output

    -- StyLua options
    use_stylua = true,                -- Use StyLua for formatting
    stylua_path = "stylua",           -- Path to StyLua executable

    -- Luacheck options
    use_luacheck = true,              -- Use Luacheck for linting
    luacheck_path = "luacheck",       -- Path to Luacheck executable

    -- Custom fixers
    custom_fixers = {
      trailing_whitespace = true,     -- Fix trailing whitespace in strings
      unused_variables = true,        -- Fix unused variables by prefixing with underscore
      string_concat = true,           -- Optimize string concatenation
      type_annotations = false,       -- Add type annotations (disabled by default)
      lua_version_compat = false,     -- Fix Lua version compatibility issues (disabled by default)
    },
  },

  -- Report Configuration
  reporting = {
    report_dir = "./coverage-reports", -- Base directory for reports
    report_suffix = nil,              -- Suffix to add to report filenames
    timestamp_format = "%Y-%m-%d",    -- Format for timestamps in filenames
    templates = {                     -- Path templates for different report types
      coverage = nil,                 -- Template for coverage reports
      quality = nil,                  -- Template for quality reports
      results = nil,                  -- Template for test results
    },
    verbose = false,                  -- Enable verbose output during report generation
  },

  -- Watch Mode
  watch = {
    dirs = { "." },                   -- Directories to watch
    ignore = { "node_modules", ".git" }, -- Patterns to ignore
    debounce = 500,                   -- Debounce time in milliseconds
    clear_console = true,             -- Clear console before re-running tests
  },

  -- Interactive CLI Mode
  interactive = {
    history_size = 100,               -- Number of commands to keep in history
    prompt = "> ",                    -- Command prompt
    default_dir = "./tests",          -- Default directory for test discovery
    default_pattern = "*_test.lua",   -- Default pattern for test files
  },

  -- Custom Formatters
  formatters = {
    module = nil,                     -- Custom formatter module to load
    coverage = nil,                   -- Custom format for coverage reports
    quality = nil,                    -- Custom format for quality reports
    results = nil,                    -- Custom format for test results
  },

  -- Module Reset System
  module_reset = {
    enabled = true,                   -- Enable module reset between test files
    track_memory = true,              -- Track memory usage during reset
    protected_modules = {             -- Modules that should never be reset
      "string", "table", "math",
      "io", "os", "coroutine",
      "debug", "package"
    },
    exclude_patterns = {              -- Patterns to exclude from reset
      "^_G$", "^package%.", "^debug%."
    },
  },

  -- Logging Configuration
  logging = {
    level = 3,                       -- Default log level (ERROR=1, WARN=2, INFO=3, DEBUG=4, VERBOSE=5)
    timestamps = true,               -- Include timestamps in log entries
    use_colors = true,               -- Use colors for console output
    output_file = "firmo.log",   -- Log file name (nil for console-only output)
    log_dir = "logs",                -- Log directory (relative to current directory)
    max_file_size = 50 * 1024,       -- Max log file size before rotation (50KB)
    max_log_files = 5,               -- Number of rotated log files to keep
    date_pattern = "%Y-%m-%d",       -- Date pattern for log timestamps
    silent = false,                  -- Suppress all log output when true

    -- Module-specific log levels
    modules = {
      coverage = 3,                  -- INFO level for coverage module
      reporting = 3,                 -- INFO level for reporting module
      parser = 2,                    -- WARN level for parser module
      codefix = 4,                   -- DEBUG level for codefix module
      watcher = 3,                   -- INFO level for watcher module
      interactive = 3,               -- INFO level for interactive module
      formatters = 2,                -- WARN level for formatters module
    }
  },
}
